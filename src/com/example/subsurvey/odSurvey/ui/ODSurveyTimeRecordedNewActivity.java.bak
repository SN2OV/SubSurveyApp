package com.example.subsurvey.odSurvey.ui;

import butterknife.ButterKnife;
import butterknife.InjectView;
import butterknife.OnClick;

import com.example.subsurvey.AppConfig;
import com.example.subsurvey.AppContext;
import com.example.subsurvey.R;
import com.example.subsurvey.R.layout;
import com.example.subsurvey.R.menu;
import com.example.subsurvey.common.StringUtils;
import com.example.subsurvey.common.SurveyUtils;
import com.example.subsurvey.common.UIHelper;
import com.example.subsurvey.odSurvey.beans.ODSurveyEntity;
import com.example.subsurvey.odSurvey.helper.ODSurveyDataHelper;
import com.example.subsurvey.old.ODSurveySettingActivity;
import com.example.subsurvey.personalSetting.UserEntity;

import android.os.Bundle;
import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.SharedPreferences.Editor;
import android.support.v7.app.ActionBar;
import android.support.v7.app.ActionBarActivity;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.ImageView;
import android.widget.NumberPicker;
import android.widget.RelativeLayout;
import android.widget.TextView;

public class ODSurveyTimeRecordedNewActivity extends ActionBarActivity {
	
	@InjectView(R.id.odLineShowTV)
	TextView odLineShowTV;
	@InjectView(R.id.ODFlightNumberPicker)
	NumberPicker ODFlightNumberPicker;
	@InjectView(R.id.odTodoNextTV)
	TextView odTodoNextTV;
	@InjectView(R.id.odLastTimeTV)
	TextView odLastTimeTV;
	@InjectView(R.id.ODStartSurveyImageView)
	ImageView ODStartSurveyImageView;
	@InjectView(R.id.ODSearchSurveyImageView)
	ImageView ODSearchSurveyImageView;
	@InjectView(R.id.odFlightRL)
	RelativeLayout odFlightRL;
	
	private Context context;
	private UserEntity user;
	private AppContext appContext;
	private int surveyTypeNo,countFlag = 0, noFlag = 0 ,odDatabaseID=1 , odLineNo=0; //countFlag标志记录第n小组数据,noFlag记录
	public static ODSurveyEntity odSurveyEntity;
	private SharedPreferences preferences;
	

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_odsurvey_time_recorded_new);
		init();
		initView();
	}

	private void init() {
		final ActionBar bar =getSupportActionBar();
        bar.setDisplayHomeAsUpEnabled(true);//有小箭头，图标可以点击
        bar.setDisplayShowHomeEnabled(false);//左上角不显示程序图标
		context = getApplicationContext();
		appContext = (AppContext)getApplication();
		user = appContext.getUser();
		ButterKnife.inject(this);
		ODSurveyTimeRecordedNewActivity.odSurveyEntity = new ODSurveyEntity();
		
		surveyTypeNo = SurveyUtils.getSurveyTypeNo(user.getOdType(), AppConfig.odTypeInfo);
		//od属性复制入类
		fillDataIntoODEntityByUser(ODSurveyTimeRecordedNewActivity.odSurveyEntity,user);
	}

	private void initView() {
		ODFlightNumberPicker.setValue(1);
		ODFlightNumberPicker.setMinValue(1);
		ODFlightNumberPicker.setMaxValue(6);
		odTodoNextTV.setText("进站刷卡时刻");
		SurveyUtils.getODLine(odLineShowTV, user, 0);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.odsurvey_time_recorded_new, menu);
		return true;
	}
	
	@OnClick({R.id.ODStartSurveyImageView,R.id.ODSearchSurveyImageView})
	void onODRecordedClick(View v){
		switch(v.getId()){
		case R.id.ODStartSurveyImageView:
			
			String curTime = StringUtils.getSystemTime();
			odLastTimeTV.setText(curTime);
			
			/*
			 * 根据提示内容赋值
			 */
			if(odTodoNextTV.getText().equals("进站刷卡时刻"))
				ODSurveyTimeRecordedNewActivity.odSurveyEntity.setGetinStationTime(curTime);
			switch(odLineNo){
			//第一班车
			case 0:
				if(odTodoNextTV.getText().equals("到达站台时刻"))
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setArriveStationTime1(curTime);
				else if(odTodoNextTV.getText().equals("列车开行时刻"))
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setTrainStartingTime1(curTime);
				else if(odTodoNextTV.getText().equals("下车时刻"))
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setGetoffStationTime1(curTime);
				break;
			//第二班车
			case 1:
				if(odTodoNextTV.getText().equals("到达站台时刻"))
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setArriveStationTime2(curTime);
				else if(odTodoNextTV.getText().equals("列车开行时刻"))
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setTrainStartingTime2(curTime);
				else if(odTodoNextTV.getText().equals("下车时刻"))
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setGetoffStationTime2(curTime);
				break;
			//第三班车
			case 2:
				if(odTodoNextTV.getText().equals("到达站台时刻"))
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setArriveStationTime3(curTime);
				else if(odTodoNextTV.getText().equals("列车开行时刻"))
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setTrainStartingTime3(curTime);
				else if(odTodoNextTV.getText().equals("下车时刻"))
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setGetoffStationTime3(curTime);
				break;
			}
			if(odTodoNextTV.getText().equals("出站刷卡时刻"))
				ODSurveyTimeRecordedNewActivity.odSurveyEntity.setGetoutStationTime(curTime);
			
			//调出numberPicker
			if(noFlag == 1){
				odFlightRL.setVisibility(View.VISIBLE);
			}else 
				odFlightRL.setVisibility(View.GONE);
			//录完一大组数据,存库
			if(noFlag == 2){
				switch(odLineNo){
				case 0:
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setShift1(ODFlightNumberPicker.getValue()+"");
					break;
				case 1:
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setShift2(ODFlightNumberPicker.getValue()+"");
					 break;
				case 2:
					ODSurveyTimeRecordedNewActivity.odSurveyEntity.setShift3(ODFlightNumberPicker.getValue()+"");
					break;
				}
			}else if(noFlag == -1){
				UIHelper.ToastMessage(context, "本组数据录入完成");
				odTodoNextTV.setText("");
				
				preferences = getSharedPreferences("odDatabaseID", MODE_WORLD_WRITEABLE);
				odDatabaseID = preferences.getInt("odDatabaseID", 1);//默认为第二个参数1
				ODSurveyTimeRecordedNewActivity.odSurveyEntity.setID(odDatabaseID);
				ODSurveyDataHelper.insertIntoODSurveyData(context, ODSurveyTimeRecordedNewActivity.odSurveyEntity);
				odDatabaseID++;
				//通过sharedPreferences将主键保存起来
				Editor editor = preferences.edit();
				editor.putInt("odDatabaseID",odDatabaseID);
				editor.commit();
				
				//跳转到详情看刚才输入的数据
				Intent it = new Intent();
				it.setClass(context, ODSurveyDataPerNewActivity.class);
				it.putExtra("surveyTypeNo", surveyTypeNo);
				it.putExtra("odDatabaseID", odDatabaseID);
				startActivity(it);
				finish();
				
				//跳转到查询界面
				return;
			}else if(noFlag == 3){
				switch(surveyTypeNo){
				case AppConfig.OD_TRANSFER_NONE:
					odTodoNextTV.setText("出站刷卡时刻");
					noFlag = -1;
					odLineNo = 0;
					return;
				case AppConfig.OD_TRANSFER_ONCE:
				case AppConfig.OD_TRANSFER_TWICE:
					odTodoNextTV.setText(AppConfig.odToHints[0]);
					noFlag = 0;
					surveyTypeNo --;
					odLineNo++;
					break;
				}
			}
			
			SurveyUtils.getODLine(odLineShowTV, user, odLineNo);
			odTodoNextTV.setText(AppConfig.odToHints[noFlag]);
			noFlag ++;
			break;
		case R.id.ODSearchSurveyImageView:
			Intent it = new Intent();
			it.setClass(context, ODSurveyDataPerNewActivity.class);
			startActivity(it);
			break;
		}
	}

	public void fillDataIntoODEntityByUser(ODSurveyEntity odSurveyEntity,UserEntity user){
		
		odSurveyEntity.setCardNum(user.getOdCardNum());
		odSurveyEntity.setIDNo(user.getOdIDNum());
		odSurveyEntity.setDistanceTotal(user.getOdDistance());
		odSurveyEntity.setName(user.getName());
		odSurveyEntity.setDate(user.getDate());
		odSurveyEntity.setStation(user.getStation()+"");
		
		odSurveyEntity.setTransferCount(SurveyUtils.getSurveyTypeNo(user.getOdType(), AppConfig.odTypeInfo)+"");
		
		odSurveyEntity.setGetinStationLine(user.getLine());
		odSurveyEntity.setWeekdayIf(user.getWeekdayIf());
		odSurveyEntity.setStationCount(user.getOdStationCount());
		odSurveyEntity.setPeakIf(user.getOdTimePeriod());

		odSurveyEntity.setTrainDire1(user.getOdlDire1());
		odSurveyEntity.setGetoffStation1(user.getOdlOffStation1());
		odSurveyEntity.setTransferLine1(user.getOdlTransLine2());
		odSurveyEntity.setTrainDire2(user.getOdlDire2());
		odSurveyEntity.setGetoffStation2(user.getOdlOffStation2());
		odSurveyEntity.setTransferLine2(user.getOdlTransLine3());
		odSurveyEntity.setTrainDire3(user.getOdlDire3());
		odSurveyEntity.setGetoffStation3(user.getOdlOffStation3());
	}
	
	public boolean onOptionsItemSelected(MenuItem item){
        System.out.println();
        switch(item.getItemId()){
        case android.R.id.home:
            Log.i("TAG", "=========选中返回键");
            this.finish();
            break;
        }
        return super.onOptionsItemSelected(item); 
    }
}
